version: '3'

services:
    app:
        build: 
            context: .
            dockerfile: Dockerfile
        container_name: app
        #-template ./.docker/app/.env:.env
        entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 120s php-fpm
        volumes:
            - .:/var/www
        networks: 
            - app-network
        depends_on: 
            # nginx:
             - db
             - redis
        environment: 
            - DB_HOST=db
            - DB_DATABASE=laravel
            - DB_USERNAME=root
            - DB_PASSWORD=root
      
            
            
        # ports: 
        #     - "80:8000"
        # healthcheck:
        #     test: ["CMD-SHELL", "pwd"]
        #     internal: 10s
        #     timeout: 10s
        #     retries: 3

    nginx:
        build: .docker/nginx
        container_name: nginx
        entrypoint: dockerize -template ./.docker/nginx/nginx.template:nginx.conf nginx -g 'daemon off;'
        restart: always
        tty: true
        ports: 
            - "8000:80" #porta do meu computador : porta do container
        volumes:
            - .:/var/www # minha pasta local : pasta no container
        networks: 
            - app-network
        depends_on: 
            - app
        environment: 
            - NGINX_HOST=app
            - NGINX_PORT=9000
                # condition: service_healthy 
            
    db:
        image: mysql:5.7
        command:  --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        ports: 
            - "33006:3306"
        volumes: 
            - ./.docker/dbdata:/var/lib/mysql
        environment: 
            - MYSQL_DATABASE=laravel
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks: 
            - app-network
        # healthcheck:
        #     test: ["CMD-SHELL", 'mysql -uroot --database=laravel --password=root --execute="SELECT count(table_name) > 0 FROM information_schema.tables;"  --skip-column-names -B ']
        #     interval: 10s
        #     timeout: 10s
        #     retries: 4

    redis:
        image: redis:alpine
        expose: 
            - 6379
        networks: 
            - app-network

networks:
    app-network:
        driver: bridge
